<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.styleFollow.SqlMapper">
	<!-- 시퀀스 
		comment_seq
		post_seq
	-->
	<select id="idCheck" parameterType="string" resultType="int">
		select count(userid)
		from userInfo
		where userid = #{userid}
	</select>
	
	<select id="login" parameterType="hashmap" resultType="UserInfoDTO">
		select *
		from userInfo
		where userid=#{userid} and pwd=#{pwd}
	</select>
	
	<insert id="memberReg" parameterType="UserInfoDTO">
		insert into userinfo(userid, pwd, gender)
		values(#{userid}, #{pwd}, #{gender})
	</insert>
	
	<insert id="styleReg" parameterType="UserStyleDTO">
		insert into userstyle(userid, style) 
		values(#{userid}, #{style})
	</insert>
	
	<select id="allPosts" resultType="PostDTO"><!-- 전체 포스팅 -->
		select idx, userid, weather, style, photo, content, to_char(writeday, 'YYYYMMDDHH24MISS') writeday
		from post
		order by writeday desc
	</select>
	
	<select id="posts" parameterType="string" resultType="PostDTO"><!-- 사용자 포스팅 -->
		select idx, userid, weather, style, photo, content, to_char(writeday, 'YYYYMMDDHH24MISS') writeday
		from post
		where userid=#{userid}
		order by writeday desc
	</select>
	
	<insert id="upload" parameterType="PostDTO">
		insert into post(idx, userid, weather, style, photo, content, temp)
		values(post_seq.nextval, #{userid}, #{weather}, #{style}, #{photo}, #{content}, #{temp})
	</insert>
	
	<select id="comments" parameterType="int" resultType="CommentsDTO">
		select cmntidx, userid, postidx, commented, to_char(writeday, 'YYYYMMDDHH24MISS') writeday
		from comments
		where postidx=#{postidx}
		order by writeday asc
	</select>
	
	<insert id="uploadComment" parameterType="CommentsDTO">
		insert into comments(cmntidx, userid, postidx, commented)
		values(comment_seq.nextval, #{userId}, #{postIdx}, #{commented})
	</insert>
	
	<select id="selectPostedComment" parameterType="string" resultType="CommentsDTO">
		select cmntidx, userid, postidx, commented, to_char(writeday, 'YYYYMMDDHH24MISS') writeday
		from comments
		where userid=#{userId}
		order by writeday desc
	</select>
	
	<update id="modifyComment" parameterType="CommentsDTO">
		update comments
		set	commented=#{commented}
		where cmntidx=#{cmntIdx}
	</update>
	
	<select id="selectModifiedComment" parameterType="int" resultType="CommentsDTO">
		select cmntIdx, userId, postIdx, commented, writeday
		from comments
		where cmntIdx=#{cmntIdx}
	</select>
	
	<delete id="deleteComment" parameterType="int">
		delete comments
		where cmntIdx=#{cmntIdx}
	</delete>
	
	<update id="modifyContent" parameterType="PostDTO">
		update post
		set style=#{style}, content=#{content}
		where idx=#{idx}
	</update>
	
	<select id="selectModifiedContent" parameterType="int" resultType="PostDTO">
		select idx, userid, weather, style, photo, content, to_char(writeday, 'YYYYMMDDHH24MISS') writeday
		from post
		where idx=#{idx} 
	</select>
	
	<delete id="deleteContent" parameterType="int">
		delete post
		where idx=#{idx}
	</delete>
	
	<select id="countLikes" parameterType="int" resultType="int">
		select count(*)
		from likes
		where idx=#{idx}
	</select>
	
	<select id="checkLikes" parameterType="hashmap" resultType="int">
		select count(*)
		from likes
		where idx=#{idx} and userid=#{userid}
	</select>
	
	<insert id="uploadLike" parameterType="hashmap">
		insert into likes(idx, userid)
		values(#{idx}, #{userid})
	</insert>

</mapper>